const axios = require('axios')
import { useEffect, useState, } from "react";
import Head from "next/head";
import Image from 'next/image'
import { withStyles, makeStyles } from "@material-ui/core/styles";
import Table from "@material-ui/core/Table";
import TableBody from "@material-ui/core/TableBody";
import TableCell from "@material-ui/core/TableCell";
import TableContainer from "@material-ui/core/TableContainer";
import TableHead from "@material-ui/core/TableHead";
import TableRow from "@material-ui/core/TableRow";
import Paper from "@material-ui/core/Paper";
import { Button } from "@material-ui/core";
import Link from 'next/link';
import Router, { useRouter } from 'next/router';


const StyledTableCell = withStyles((theme) => ({

  head: {
    backgroundColor: theme.palette.common.black,
    color: theme.palette.common.white,
  },
  body: {
    fontSize: 14,
  },
}))(TableCell);

const StyledTableRow = withStyles((theme) => ({
  root: {
    "&:nth-of-type(odd)": {
      backgroundColor: theme.palette.action.hover,
    },
  },
}))(TableRow);

const useStyles = makeStyles({
  table: {
    minWidth: 700,
  },
});



const App = ({articles}) => {
  const router = useRouter()
  const classes = useStyles();
  // const [product, setProduct] = useState([]);
  // const [product, setProduct] = useState({dataPass});
  const [search, setSearch] = useState("");

  useEffect(() => {
    // getProductData();
    // getServerSideProps();
  }, []);
console.log("KKLLLL+++++", articles.results.res);
  return (
    <>
      <Head>
        <title>InfluxIQ | User Listing</title>
        <meta key="og:image" name="og:image" content="https://all-frontend-assets.s3.amazonaws.com/transcendentpagan/assets/images/og_image.jpg" />
        <meta property="og:url" content="https://next.influxhostserver.com/listingusers" key="ogurl" />
        <meta property="og:site_name" content="Influiq" key="ogsitename" />
        <meta property="og:title" content="Next React" key="ogtitle" />
        <meta property="og:description" content="Generated by create next app" key="ogdesc" />
      </Head>


      <div className="App">
        <h1 style={{ textAlign: 'center' }}>Users List</h1>
        {/* <Image
          src="/sample.png"
          alt="Picture of the author"
          width={110}
          height={100}
        /> */}
        <center>
          <input
            type="text"
            placeholder="Search here"
            onChange={(e) => {
              setSearch(e.target.value);
            }}
          /></center>
        <br /><br />  <br /><br />
      {articles.results.res.map((item,index)=>{
        return (
          <>
                      <StyledTableRow key={item._id}>
                        <StyledTableCell component="th" scope="row" align="center">
                          {item.first_name + ' ' + item.lastName}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          {item.email}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          {item.phone}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          {item.gender}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          <Button variant="contained" color="primary" type="submit" onClick={() => Router.push('/users/' + item._id)} >Edit </Button>
                        </StyledTableCell>
                      </StyledTableRow>
                    </>
        )}
      )}
      </div>
    </>
  );
};


export async function getServerSideProps() {
  const res = await fetch('https://wfr9bu9th2.execute-api.us-east-1.amazonaws.com/dev/api3/getnextuserslist',{
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
                "db": "data_pece",
                "condition": {
                  "limit": 10,
                  "skip": 0
                },
                "sort": {
                  "type": "desc",
                  "field": "_id"
                }
              })
      })
      const data = await res.json();
     
      return {
        props: {
          articles: data,
        }
      }
};


export default App;