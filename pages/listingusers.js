const axios = require('axios')
import { useEffect, useState, } from "react";
import Head from "next/head";
import Image from 'next/image'
import { withStyles, makeStyles } from "@material-ui/core/styles";
import Table from "@material-ui/core/Table";
import TableBody from "@material-ui/core/TableBody";
import TableCell from "@material-ui/core/TableCell";
import TableContainer from "@material-ui/core/TableContainer";
import TableHead from "@material-ui/core/TableHead";
import TableRow from "@material-ui/core/TableRow";
import Paper from "@material-ui/core/Paper";
import { Button, Typography } from "@material-ui/core";
import Link from 'next/link';
import Router, { useRouter } from 'next/router';
import Box from '@mui/material/Box';
import LinearProgress from '@mui/material/LinearProgress';
import Pagination from '@mui/material/Pagination';



const StyledTableCell = withStyles((theme) => ({

  head: {
    backgroundColor: theme.palette.common.black,
    color: theme.palette.common.white,
  },
  body: {
    fontSize: 14,
  },
}))(TableCell);

const StyledTableRow = withStyles((theme) => ({
  root: {
    "&:nth-of-type(odd)": {
      backgroundColor: theme.palette.action.hover,
    },
  },
}))(TableRow);

const useStyles = makeStyles({
  table: {
    minWidth: 700,
  },

});



const App = ({ articles, listCount }) => {
  const router = useRouter()
  const classes = useStyles();

  const [page, setPage] = useState(1);
  const [product, setProduct] = useState(articles.results.res);
  const [search, setSearch] = useState("");
  var totalCount = listCount.count;

  var pageCount = Math.ceil(totalCount / 10);
  var lastCount = listCount.count;

  useEffect(() => {

  }, []);

  function handlePaginationChange(e, value) {
    // console.log(value, '++++++VALLLLLLLLL');
    setPage(value);
    // fetchmoredata(10, value - 1)
    fetchmoredata(10, value)
  }

  async function fetchmoredata(limit = 10, skip = 0) {

    const res = await fetch(`https://wfr9bu9th2.execute-api.us-east-1.amazonaws.com/dev/api3/getnextuserslist`, {
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        "db": "data_pece",
        "condition": {
          "limit": limit,
          "skip": 10 * (skip - 1)
        },
        "sort": {
          "type": "desc",
          "field": "_id"
        }
      })
    })
    const data = await res.json();
    console.log(data, '++++++++++++++++++++=')
    setProduct(data.results.res);
  }
  // console.log("KKLLLL+++++", articles.results.res);

  // console.log("Product+++++++", product.length);

  // setProduct(articles.results.res);
  // console.log("PAGEVALUE++++++++", page)

  console.log("TOTALLLLLCOUNT++++++", pageCount);
  return (
    <>
      <Head>
        <title>InfluxIQ | User Listing</title>
        <meta key="og:image" name="og:image" content="https://all-frontend-assets.s3.amazonaws.com/transcendentpagan/assets/images/og_image.jpg" />
        <meta property="og:url" content="https://next.influxhostserver.com/listingusers" key="ogurl" />
        <meta property="og:site_name" content="Influiq" key="ogsitename" />
        <meta property="og:title" content="Next React" key="ogtitle" />
        <meta property="og:description" content="Generated by create next app" key="ogdesc" />
      </Head>

      <div className="App">
        <cent>
          <Pagination
            style={{ marginLeft: 15 }}
            count={pageCount}
            color="secondary"
            page={page}
            onChange={handlePaginationChange}
          /></cent>
        <Typography style={{ textAlign: 'center' }}>Data Show From :  {10 * (page - 1) + '  To  ' + ((10 * page < totalCount) ? (10 * page) : totalCount)}  Of  {totalCount} </Typography>
        <br />

        <h1 style={{ textAlign: 'center' }}>Users List</h1>
        {/* <Image
          src="/sample.png"
          alt="Picture of the author"
          width={110}
          height={100}
        /> */}

        <center>
          <input
            type="text"
            placeholder="Search here"
            onChange={(e) => {
              setSearch(e.target.value);
            }}
          /></center>
        <br /><br />  <br /><br />
        <TableContainer component={Paper}>
          <Table className="tablecls" aria-label="customized table">
            <TableHead>
              <TableRow>
                <StyledTableCell align="center">Name</StyledTableCell>
                <StyledTableCell align="center">E-mail</StyledTableCell>
                <StyledTableCell align="center">Phone No.</StyledTableCell>
                <StyledTableCell align="center">Gender</StyledTableCell>
                <StyledTableCell align="center">Action</StyledTableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {product
                .filter((item) => {
                  if (search == "") {
                    return item;
                  } else if (
                    item.first_name.toLowerCase().includes(search.toLowerCase())
                  ) {
                    return item;
                  }
                })
                .map((item, index) => {
                  return (
                    <>
                      <StyledTableRow key={item._id}>
                        <StyledTableCell component="th" scope="row" align="center">
                          {item.first_name + ' ' + item.lastName}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          {item.email}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          {item.phone}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          {item.gender}
                        </StyledTableCell>
                        <StyledTableCell align="center">
                          <Button variant="contained" color="primary" type="submit" onClick={() => Router.push('/users/' + item._id)} >Edit </Button>
                        </StyledTableCell>
                      </StyledTableRow>
                    </>
                  )
                }
                )}
            </TableBody>
          </Table>
        </TableContainer>
      </div>
    </>
  );
};


export async function getServerSideProps() {

  // Display 10 users per page

  const res = await fetch(`https://wfr9bu9th2.execute-api.us-east-1.amazonaws.com/dev/api3/getnextuserslist`, {
    method: 'post',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      "db": "data_pece",
      "condition": {
        "limit": 10,
        "skip": 0
      },
      "sort": {
        "type": "desc",
        "field": "_id"
      }
    })
  })
  const data = await res.json();


  const countList = await fetch(`https://wfr9bu9th2.execute-api.us-east-1.amazonaws.com/dev/api3/getnextuserslist-count`, {
    method: 'post',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      "condition": {
        "limit": 10,
        "skip": 0
      },
      "sort": {
        "type": "desc",
        "field": "_id"
      },
      "searchcondition": {}
    })
  })
  const listDataCount = await countList.json();
  // console.log("++++++++KKKKKKK", listDataCount);
  return {
    props: {
      articles: data,
      listCount: listDataCount,
    }
  }
};


export default App;